#!/bin/sh

sxhkd &

# AutoStart
# run the xrandr command if an external monitor is connected to the
# laptop.  This must be executed before the polybar command, so that
# polybar can set the two separate bars properly.
if [ -x $HOME/bin/own_script_bspwm_laptop_dual_monitor ];then
    own_script_bspwm_laptop_dual_monitor
fi
#f [ -x $HOME/bin/own_script_bspwm_laptop_dual_monitor ];then
#	INTERNAL_MONITOR = "eDP-1"	
#	INTERNAL_MONITOR_CONNECTED=$(xrandr --query | grep $INTERNAL_MONITOR)
#	EXTERNAL_MONITOR=$(xrandr --query | grep " connected" | cut -d" " -f1 | tail -n 1)
#	echo $INTERNAL_MONITOR_CONNECTED
#	echo $EXTERNAL_MONITOR

	# xrandr --output $EXTERNAL_MONITOR --off
	# if [[ $INTERNAL_MONITOR_CONNECTED = *connected* ]]; then
	#     xrandr --output eDP-1 --primary --mode 1920x1080 --rotate normal --output $EXTERNAL_MONITOR --mode 1920x1080 --rotate normal --right-of $INTERNAL_MONITOR
	# fi
#fi


INTERNAL_MONITOR="eDP-1"	
EXTERNAL_MONITOR=$(xrandr --query | grep " connected" | cut -d" " -f1 | tail -n 1)
# on first load setup default workspaces
#if [[ "$1" = 0 ]]; then
#	if [[ $(xrandr -q | grep "${EXTERNAL_MONITOR} connected") ]]; then
#	    bspc monitor "$INTERNAL_MONITOR" -d 1 7 8 9 10
#		bspc monitor "$EXTERNAL_MONITOR" -d 2 3 4 5 6
#	    bspc wm -O "$EXTERNAL_MONITOR" "$INTERNAL_MONITOR"
#  	else
#    	bspc monitor "$INTERNAL_MONITOR" -d 1 2 3 4 5 6 7 8 9 10
#  	fi
#fi

#######################################################
############# MONITOR PLUGGED IN ######################
#######################################################
#monitor_add() {
  # Move first 5 desktops to external monitor
#  for desktop in $(bspc query -D --names -m "$INTERNAL_MONITOR" | sed 5q); do
#    bspc desktop "$desktop" --to-monitor "$EXTERNAL_MONITOR"
#  done

  # Remove default desktop created by bspwm
#  bspc desktop Desktop --remove

  # reorder monitors
#  bspc wm -O "$EXTERNAL_MONITOR" "$INTERNAL_MONITOR"
#}

######################################################
################ MONITOR REMOVED #####################
######################################################
#monitor_remove() {
  # Add default temp desktop because a minimum of one desktop is required per monitor
#  bspc monitor "$EXTERNAL_MONITOR" -a Desktop

  # Move all desktops except the last default desktop to internal monitor
#  for desktop in $(bspc query -D -m "$EXTERNAL_MONITOR");	do
#    bspc desktop "$desktop" --to-monitor "$INTERNAL_MONITOR"
#  done

  # delete default desktops
#  bspc desktop Desktop --remove

  # reorder desktops
#  bspc monitor "$INTERNAL_MONITOR" -o 1 2 3 4 5 6 7 8 9 10
#}


######################################################
#################### MONITOR LOGIC ###################
######################################################
#if [[ $(xrandr -q | grep "${EXTERNAL_MONITOR} connected") ]]; then
#  # set xrandr rules for docked setup
#  xrandr --output "$INTERNAL_MONITOR" --mode 1920x1080 --pos 0x0 --rotate normal --output "$EXTERNAL_MONITOR" --#primary --mode 1920x1080 --pos 1920x0 --rotate normal
#  if [[ $(bspc query -D -m "${EXTERNAL_MONITOR}" | wc -l) -ne 5 ]]; then
#    monitor_add
#  fi
#  bspc wm -O "$EXTERNAL_MONITOR" "$INTERNAL_MONITOR"
#else
#  # set xrandr rules for mobile setup
#  xrandr --output "$INTERNAL_MONITOR" --primary --mode 1920x1080 --pos 0x0 --rotate normal --output #"$EXTERNAL_MONITOR" --off
#  if [[ $(bspc query -D -m "${INTERNAL_MONITOR}" | wc -l) -ne 10 ]]; then
#    monitor_remove
#  fi
#fi

bspc config border_width         1
bspc config window_gap          10
bspc config top_padding		-5

bspc monitor eDP-1 -d 1 7 8 9 10

# external
bspc monitor DP-1-1 -d 2 3 4 5 6
bspc monitor DP-2 -d 2 3 4 5 6
bspc monitor DP-3 -d 2 3 4 5 6
bspc monitor DP-4 -d 2 3 4 5 6
bspc monitor DP-5 -d 2 3 4 5 6
bspc monitor HDMI-1 -d 2 3 4 5 6

# bspc wm -O eDP-1 DP-1-1 DP-2 DP-3 DP-4 HDMI-1


# new
bspc config split_ratio          0.52
bspc config gapless_monocle      true
bspc config borderless_monocle   true
bspc config pointer_follows_focus true
# bspc config focus_follows_pointer false
bspc config pointer_modifier mod4
bspc config pointer_action1 move
bspc config pointer_action2 resize_side
bspc config pointer_action3 resize_corner
bspc config focus_follows_pointer true

bspc config focused_border_color        "#82cfff"
bspc config normal_border_color         "#1e1e2e"
bspc config active_border_color         "#1e1e2e"
bspc config presel_feedback_color	"#008ce3"

# new
bspc rule -a Slack desktop='7'
bspc rule -a Google-chrome desktop='2'
bspc rule -a Alacritty desktop='1'
# bspc rule -a Code desktop='3'
bscp rule -a Thunderbird desktop='9'
bscp rule -a Joplin desktop='9'
# bspc rule -a Thunderbird desktop='^5'
#bspc rule -a mplayer2 state=floating
#bspc rule -a Kupfer.py focus=on
#bspc rule -a Screenkey manage=off

# Compositor
picom --experimental-backend &

# Wallpapers
feh --bg-fill --randomize ~/Immagini/WallPaper/wallpaper.png

# startup applications
# con & alla fine
code &
alacritty &
google-chrome &
slack &
thunderbird &
dunst -conf ~/.config/dunst/dunstrc &

# hide mouse cursor
# unclutter -idle 1 &

# Polybar
$HOME/.config/polybar/launch.sh
